[{"D:\\Task\\Server\\server\\src\\index.js":"1","D:\\Task\\Server\\server\\src\\reportWebVitals.js":"2","D:\\Task\\Server\\server\\src\\App.js":"3","D:\\Task\\Server\\server\\src\\data.js":"4","D:\\Task\\Server\\server\\src\\components\\Shipments.js":"5"},{"size":500,"mtime":1610080694276,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610079992429,"results":"8","hashOfConfig":"7"},{"size":280,"mtime":1610097901780,"results":"9","hashOfConfig":"7"},{"size":14218,"mtime":1610097901315,"results":"10","hashOfConfig":"7"},{"size":5229,"mtime":1610098639543,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lp1svb",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"D:\\Task\\Server\\server\\src\\index.js",[],"D:\\Task\\Server\\server\\src\\reportWebVitals.js",[],"D:\\Task\\Server\\server\\src\\App.js",[],"D:\\Task\\Server\\server\\src\\data.js",[],"D:\\Task\\Server\\server\\src\\components\\Shipments.js",["23"],"import React from \"react\";\n\nimport { shipments } from \"../data\";\n\n\n// function searchingFor(term) {\n//   return function(x) {\n//     return x.first.toLowerCase().includes(term.toLowerCase()) || !term;\n//   }\n// }\n\nclass Shipments extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      prev: 0,\n      next: 5,\n      term: '',\n      // dataArray: [],\n      // id:[],\n    }\n    this.handlePaginate = this.handlePaginate.bind(this);\n    // this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  // componentDidMount = () => {\n  //   if(shipments !== 0){\n  //     this.setState({\n  //       dataArray:shipments\n  //     })\n  //   }\n  // }\n\n  // renderInfo = () => {\n  //   return this.state.dataArray.length !== 0 ? (\n  //     this.state.dataArray.map((e) => {\n  //       return (\n  //         <>\n  //         <tbody>\n  //           {this.state.dataArray.map((value, key) =>\n  //             <tr key={key}>\n  //               <td>{value.id}</td>\n  //               <td>{value.name}</td>\n  //               {value.cargo.map((val, num) =>\n  //                 <td>\n  //                   <ul>\n  //                     <li>Type : {val.type}</li>\n  //                     <li>Description : {val.description}</li>\n  //                     <li>Volume: {val.volume}</li>\n  //                   </ul>\n  //                 </td>\n  //               )}\n  //               {value.cargo.length < 2 ? <td></td> : ('')}\n  //               <td>{value.mode}</td>\n  //               <td>{value.type}</td>\n  //               <td>{value.destination}</td>\n  //               <td>{value.origin}</td>\n  //               {value.services.map((val, num) =>\n  //                 <td>\n  //                   <ul>\n  //                     <li>Type : {val.type}</li>\n  //                     <li>Value : {val.value ? val.value : \"\"}</li>\n  //                   </ul>\n  //                 </td>\n  //               )}\n  //               {value.services.length < 2 ? <td></td> : ('')}\n  //               <td>{value.status}</td>\n  //               <td>{value.userId}</td>\n  //             </tr>\n  //           )}\n  //         </tbody>\n\n  //         </>\n  //           );\n  //         })\n\n  //       ) : null\n  // }\n\n\n\n  handlePaginate(e, prev, next, i) {\n    e.preventDefault();\n    // console.log(i)\n    this.setState({\n      prev: prev,\n      next: next\n    })\n  }\n\n  // searchHandler(event) {\n  //   // debugger\n  //   this.setState({ term: event.target.value })\n  // }\n\n\n  render() {\n\n    const pagination = () => {\n      let page = Math.ceil(shipments.length / 5);\n      let link = [];\n      for (var i = 1; i <= page; i++) {\n        let num = i;\n        let prev = (i * 5) - 5\n        let next = prev + 5\n        link.push(<li className=\"page-item\"><a className=\"page-link\" href={() => false} onClick={(e) => this.handlePaginate(e, prev, next, num)}>{i}</a></li>)\n      }\n      return link;\n    }\n    console.log(this.state.prev, this.state.next)\n    const data = shipments.slice(this.state.prev, this.state.next)\n    const {term } = this.state;\n\n    return (\n      <React.Fragment>\n\n        {/* <div className=\"searchArea\">\n          <input type=\"text\" placeholder=\"Search...\" name=\"info\" onChange={this.searchHandler} value={this.state.search} />\n\n        </div> */}\n        <table className=\"table\" border=\"0\" cellSpacing=\"0\" style={{ width: '100%' }}>\n          <thead>\n            <tr>\n              <th>Id </th>\n              <th>Name</th>\n              <th colspan=\"2\">Cargo</th>s\n              <th>Mode</th>\n              <th>Type</th>\n              <th>Destination</th>\n              <th>Origin</th>\n              <th colspan=\"2\">Services</th>\n              <th>Status</th>\n              <th>User Id</th>\n            </tr>\n          </thead>\n          {/* {this.renderInfo()} */}\n          <tbody>\n            {data.map((value, key) =>\n              <tr key={key}>\n                <td>{value['id']}</td>\n                <td>{value['name']}</td>\n                {value['cargo'].map((val, num) =>\n                  <td>\n                    <ul>\n                      <li>Type : {val['type']}</li>\n                      <li>Description : {val['description']}</li>\n                      <li>Volume: {val['volume']}</li>\n                    </ul>\n                  </td>\n                )}\n                {value['cargo'].length < 2 ? <td></td> : ('')}\n                <td>{value['mode']}</td>\n                <td>{value['type']}</td>\n                <td>{value['destination']}</td>\n                <td>{value['origin']}</td>\n                {value['services'].map((val, num) =>\n                  <td>\n                    <ul>\n                      <li>Type : {val['type']}</li>\n                      <li>Value : {val['value'] ? val['value'] : \"\"}</li>\n                    </ul>\n                  </td>\n                )}\n                {value['services'].length < 2 ? <td></td> : ('')}\n                <td>{value['status']}</td>\n                <td>{value['userId']}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <nav>\n          <ul className=\"pagination\">\n            {pagination()}\n          </ul>\n        </nav>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Shipments;",{"ruleId":"24","severity":1,"message":"25","line":113,"column":12,"nodeType":"26","messageId":"27","endLine":113,"endColumn":16},"no-unused-vars","'term' is assigned a value but never used.","Identifier","unusedVar"]